{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ProductType": {
				"properties": {
					"name": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"category": {
						"type": "string"
					},
					"stock": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"price",
					"category",
					"stock"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/ProductType"
					}
				},
				"required": [
					"message",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ProductCreateRequest": {
				"properties": {
					"name": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"category": {
						"type": "string"
					},
					"stock": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"name",
					"price",
					"category",
					"stock"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaginationType": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/ProductType"
						},
						"type": "array"
					},
					"totalItem": {
						"type": "number",
						"format": "double"
					},
					"totalPage": {
						"type": "number",
						"format": "double"
					},
					"currentPage": {
						"type": "number",
						"format": "double"
					},
					"limit": {
						"type": "number",
						"format": "double"
					},
					"skip": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"data",
					"totalItem",
					"totalPage",
					"currentPage",
					"limit",
					"skip"
				],
				"type": "object",
				"additionalProperties": false
			},
			"QueryType": {
				"properties": {
					"filter": {
						"type": "string"
					},
					"sort": {
						"type": "string"
					},
					"limit": {
						"anyOf": [
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "number",
								"enum": [
									0
								]
							}
						]
					},
					"page": {
						"anyOf": [
							{
								"type": "number",
								"format": "double"
							},
							{
								"type": "number",
								"enum": [
									0
								]
							}
						]
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"SignUpRequest": {
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password",
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AttributeType": {
				"description": "<p>Specifies whether the attribute is standard or custom.</p>",
				"properties": {
					"Name": {
						"type": "string",
						"description": "<p>The name of the attribute.</p>"
					},
					"Value": {
						"type": "string",
						"description": "<p>The value of the attribute.</p>"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"DeliveryMediumType": {
				"type": "string",
				"enum": [
					"EMAIL",
					"SMS"
				]
			},
			"MFAOptionType": {
				"description": "<p>\n            <i>This data type is no longer supported.</i> Applies only to SMS\n            multi-factor authentication (MFA) configurations. Does not apply to time-based one-time\n            password (TOTP) software token MFA configurations.</p>",
				"properties": {
					"DeliveryMedium": {
						"$ref": "#/components/schemas/DeliveryMediumType",
						"description": "<p>The delivery medium to send the MFA code. You can use this parameter to set only the\n                <code>SMS</code> delivery medium value.</p>"
					},
					"AttributeName": {
						"type": "string",
						"description": "<p>The attribute name of the MFA option type. The only valid value is\n                <code>phone_number</code>.</p>"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ResponseMetadata": {
				"properties": {
					"httpStatusCode": {
						"type": "number",
						"format": "double",
						"description": "The status code of the last HTTP response received for this operation."
					},
					"requestId": {
						"type": "string",
						"description": "A unique identifier for the last request sent for this operation. Often\nrequested by AWS service teams to aid in debugging."
					},
					"extendedRequestId": {
						"type": "string",
						"description": "A secondary identifier for the last request sent. Used for debugging."
					},
					"cfId": {
						"type": "string",
						"description": "A tertiary identifier for the last request sent. Used for debugging."
					},
					"attempts": {
						"type": "number",
						"format": "double",
						"description": "The number of times this operation was attempted."
					},
					"totalRetryDelay": {
						"type": "number",
						"format": "double",
						"description": "The total amount of time (in milliseconds) that was spent waiting between\nretry attempts."
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"GetUserCommandOutput": {
				"properties": {
					"Username": {
						"type": "string",
						"description": "<p>The username of the user that you requested.</p>"
					},
					"UserAttributes": {
						"items": {
							"$ref": "#/components/schemas/AttributeType"
						},
						"type": "array",
						"description": "<p>An array of name-value pairs representing user attributes.</p>\n         <p>For custom attributes, you must prepend the <code>custom:</code> prefix to the\n            attribute name.</p>"
					},
					"MFAOptions": {
						"items": {
							"$ref": "#/components/schemas/MFAOptionType"
						},
						"type": "array",
						"description": "<p>\n            <i>This response parameter is no longer supported.</i> It provides\n            information only about SMS MFA configurations. It doesn't provide information about\n            time-based one-time password (TOTP) software token MFA configurations. To look up\n            information about either type of MFA configuration, use UserMFASettingList\n            instead.</p>"
					},
					"PreferredMfaSetting": {
						"type": "string",
						"description": "<p>The user's preferred MFA setting.</p>"
					},
					"UserMFASettingList": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "<p>The MFA options that are activated for the user. The possible values in this list are\n            <code>SMS_MFA</code>, <code>EMAIL_OTP</code>, and <code>SOFTWARE_TOKEN_MFA</code>.</p>"
					},
					"$metadata": {
						"$ref": "#/components/schemas/ResponseMetadata",
						"description": "Metadata pertaining to this request."
					}
				},
				"required": [
					"$metadata"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SignInRequest": {
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ConfirmSignUpRequest": {
				"properties": {
					"username": {
						"type": "string"
					},
					"confirmationCode": {
						"type": "string"
					}
				},
				"required": [
					"username",
					"confirmationCode"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "tsoa-express-api",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "MyDragon168 ",
			"email": "cambodiagames3@gmail.com"
		}
	},
	"paths": {
		"/v1/products": {
			"post": {
				"operationId": "CreateItem",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProductResponse"
								}
							}
						}
					},
					"201": {
						"description": "Created Success"
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProductCreateRequest"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetAllData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PaginationType"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "filter",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sort",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {}
					},
					{
						"in": "query",
						"name": "page",
						"required": false,
						"schema": {}
					}
				]
			}
		},
		"/v1/products/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProductType"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "Function",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProductType"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ProductType"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteById",
				"responses": {
					"204": {
						"description": "No content"
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/google-auth/token": {
			"get": {
				"operationId": "GetTokenGoogle",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Google Auth"
				],
				"security": [],
				"parameters": []
			}
		},
		"/google-auth/token/link": {
			"get": {
				"operationId": "GetLink",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": [
					"Google Auth"
				],
				"security": [],
				"parameters": []
			}
		},
		"/auth/signup": {
			"post": {
				"operationId": "SignUp",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SignUpRequest"
							}
						}
					}
				}
			}
		},
		"/auth/signin": {
			"post": {
				"operationId": "SignIn",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetUserCommandOutput"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/SignInRequest"
							}
						}
					}
				}
			}
		},
		"/auth/confirm-signup": {
			"post": {
				"operationId": "ConfirmSignUp",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ConfirmSignUpRequest"
							}
						}
					}
				}
			}
		},
		"/auth/viewUser/{token}": {
			"get": {
				"operationId": "ViewUserData",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetUserCommandOutput"
								}
							}
						}
					}
				},
				"tags": [
					"Auth"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}